/**
 * @File Name          : addAmendmentLines
 * @Description        : Takes Quote IDs, finds Assets related to Quote Master Contract, creates Amendment Quote Lines for Assets
 * @Author             : Erik Hammel
 * @Group              : Salesforce CSG
 * @Last Modified By   : Erik Hammel
 * @Last Modified On   : 1/20/2020, 11:25:44 PM
 * @Modification Log   : 
 * Ver       Date            Author                 Modification
 * 1.0    1/20/2020        Erik Hammel             Initial Version
**/
Public Class addAmendmentLines{

    Public static List<SBQQ__QuoteLine__c> addLines(List<SBQQ__Quote__c> quoteList){
        Set<ID> contractIds = new Set<ID>();
        List<SBQQ__QuoteLine__c> amendmentLines = new List<SBQQ__QuoteLine__c>();
        Map<ID, ID> masterContractIdToQuote = new Map<ID, ID>();
        //system.debug('Quote List: ' + quoteList);
        for(SBQQ__Quote__c quote : quoteList){
            //system.debug('QUOTE : ' + quote);
               if(quote.SBQQ__Type__c == 'Amendment'){
                   if(quote.SBQQ__MasterContract__c != null){
                        //system.debug('MASTER CONTRACT: ' + quote.SBQQ__MasterContract__c);
                        contractIds.add(quote.SBQQ__MasterContract__c);
                        masterContractIdToQuote.put(quote.SBQQ__MasterContract__c, quote.ID);
                        //Id pbID = Id.valueof(q.SBQQ__PricebookId__c);
                        //system.debug('1. Adding Master Contracts, run on amendment');
                   }
                }
           }
        //system.debug('Contract IDS: ' + contractIds);
        //system.debug('MAP: ' + masterContractIdToQuote);
        List<Asset> assets = new List<Asset>();
        if(contractIds.size() > 0){
            assets = [SELECT id, Product2Id, Contract__c, Quantity, SBQQ__SegmentIndex__c, SBQQ__SegmentLabel__c, SBQQ__SegmentKey__c, SBQQ__PriceDimension__c, SBQQ__ListPrice__c, SBQQ__RegularPrice__c, SBQQ__PricingMethod__c, PricebookEntryID__c, Terminated_Date__c  FROM Asset WHERE Contract__c in :contractIds]; 
            system.debug('ASSETS: ' + assets);
        }
        if(assets.size() > 0){
            for(Asset ass : assets){
            //create Quote Line and set amendmentLine to Asset values
                //system.debug('Asset: ' + asset);
                if(ass.Terminated_Date__c == null){
                    SBQQ__QuoteLine__c amendmentLine = new SBQQ__QuoteLine__c();
                    //system.debug('ASSET CONTRACT ' + ass.Contract__c);
                    //system.debug('CONTRACT TO QUOTE MAP ' + masterContractIdToQuote);
                    //system.debug('RESULT: ' + masterContractIdToQuote.get(ass.Contract__c) );
                    //system.debug('DO I EXIST ' + amendmentLine);
                    amendmentLine.SBQQ__Quote__c = masterContractIdToQuote.get(ass.Contract__c);
                    amendmentLine.SBQQ__UpgradedAsset__c = ass.Id;
                    amendmentLine.SBQQ__Product__c = ass.Product2Id;
                    amendmentLine.SBQQ__Quantity__c = ass.Quantity;
                    amendmentLine.SBQQ__AllowAssetRefund__c = TRUE;
                    //Effective Quantity = 0
                    amendmentLine.SBQQ__PriorQuantity__c = ass.Quantity;
                    amendmentLine.SBQQ__SegmentIndex__c = ass.SBQQ__SegmentIndex__c;
                    amendmentLine.SBQQ__SegmentLabel__c = ass.SBQQ__SegmentLabel__c;
                    amendmentLine.SBQQ__SegmentKey__c = ass.SBQQ__SegmentKey__c;
                    amendmentLine.SBQQ__Dimension__c = ass.SBQQ__PriceDimension__c;
                    amendmentLine.SBQQ__ListPrice__c = ass.SBQQ__ListPrice__c;
                    amendmentLine.SBQQ__RegularPrice__c = ass.SBQQ__RegularPrice__c;
                    amendmentLine.SBQQ__PricingMethod__c = ass.SBQQ__PricingMethod__c;
                    amendmentLine.SBQQ__PricebookEntryId__c = ass.PricebookEntryID__c;
                    amendmentLine.SBQQ__Existing__c = TRUE;
                    amendmentLine.SBQQ__UpgradedQuantity__c = ass.Quantity;
                    //system.debug('Adding this amendment line: ' + amendmentLine);
                    amendmentLines.add(amendmentLine);
                }
            }
        }
        //system.debug('AMENDMENT LINES: ' + amendmentLines);
        return amendmentLines;
    }

}
